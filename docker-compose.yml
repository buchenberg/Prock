services:
  backend:
    image: prock-backend
    restart: always
    environment:
      - MONGODB_CONNECTION_STRING=mongodb://user:pass@database
      - ASPNETCORE_ENVIRONMENT=Docker
    build:
      context: ./backend/
      dockerfile: ./.docker/Dockerfile
    ports:
      - 5001:5001
      - 443:443
      - 80:80
    depends_on:
      - database
    networks:
      procknet:
        aliases:
          - backend
  frontend:
    image: prock-frontend
    restart: always
    build:
      context: ./frontend/
      dockerfile: ./.docker/Dockerfile
    ports:
      - 8080:80
    depends_on:
      - backend
    networks:
      procknet:
        aliases:
          - frontend
  database:
    image: mongodb/mongodb-community-server:6.0.15-ubi9
    restart: always
    environment:
      - MONGODB_INITDB_ROOT_USERNAME=user
      - MONGODB_INITDB_ROOT_PASSWORD=pass
    volumes:
      # seeding scripts
      - ./database/.docker/mongo-entrypoint:/docker-entrypoint-initdb.d
      # named volumes
      - mongodb:/data/db
      - mongoconfig:/data/configdb
    ports:
      - 27018:27017
    networks:
       procknet:
        aliases:
          - database
volumes:
  mongodb:
  mongoconfig:
networks:
  procknet:
    driver: bridge